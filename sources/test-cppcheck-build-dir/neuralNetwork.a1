<?xml version="1.0"?>
<analyzerinfo checksum="3394489695">
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;neuralNetwork&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;neuralNetwork&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="/home/dante/dev/NilDa/sources/core/neuralNetwork/neuralNetwork.cpp" file="/home/dante/dev/NilDa/sources/core/neuralNetwork/neuralNetwork.h" line="101" column="3"/>
            <symbol>neuralNetwork</symbol>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;||&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file="/home/dante/dev/NilDa/sources/core/neuralNetwork/neuralNetwork.cpp" line="814" column="36"/>
        </error>
  <FileInfo check="ctu">
<function-call call-id="/home/dante/dev/NilDa/sources/core/neuralNetwork/neuralNetwork.h:148:10" call-funcname="getSumError" call-argnr="3" file="/home/dante/dev/NilDa/sources/core/neuralNetwork/neuralNetwork.cpp" line="413" col="28" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/dante/dev/NilDa/sources/core/neuralNetwork/neuralNetwork.h:109:8" call-funcname="forwardPropagation" call-argnr="2" file="/home/dante/dev/NilDa/sources/core/neuralNetwork/neuralNetwork.cpp" line="485" col="23" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/dante/dev/NilDa/sources/core/neuralNetwork/neuralNetwork.h:140:8" call-funcname="predict" call-argnr="3" file="/home/dante/dev/NilDa/sources/core/neuralNetwork/neuralNetwork.cpp" line="502" col="10" call-argexpr="runForward" call-argvaluetype="0" call-argvalue="0">
  <path file="/home/dante/dev/NilDa/sources/core/neuralNetwork/neuralNetwork.cpp" line="416" col="44" info="Calling function 'getSumError', 3rd argument 'false' value is 0"/>
</function-call><function-call call-id="/home/dante/dev/NilDa/sources/core/neuralNetwork/neuralNetwork.h:109:8" call-funcname="forwardPropagation" call-argnr="2" file="/home/dante/dev/NilDa/sources/core/neuralNetwork/neuralNetwork.cpp" line="564" col="21" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/dante/dev/NilDa/sources/core/neuralNetwork/neuralNetwork.h:79:8" call-funcname="initLayers" call-argnr="1" file="/home/dante/dev/NilDa/sources/core/neuralNetwork/neuralNetwork.cpp" line="631" col="13" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/>  </FileInfo>
  <FileInfo check="ctu">
<function-call call-id="/home/dante/dev/NilDa/sources/core/neuralNetwork/neuralNetwork.h:148:10" call-funcname="getSumError" call-argnr="3" file="/home/dante/dev/NilDa/sources/core/neuralNetwork/neuralNetwork.cpp" line="413" col="28" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/dante/dev/NilDa/sources/core/neuralNetwork/neuralNetwork.h:109:8" call-funcname="forwardPropagation" call-argnr="2" file="/home/dante/dev/NilDa/sources/core/neuralNetwork/neuralNetwork.cpp" line="485" col="23" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/dante/dev/NilDa/sources/core/neuralNetwork/neuralNetwork.h:140:8" call-funcname="predict" call-argnr="3" file="/home/dante/dev/NilDa/sources/core/neuralNetwork/neuralNetwork.cpp" line="502" col="10" call-argexpr="runForward" call-argvaluetype="0" call-argvalue="0">
  <path file="/home/dante/dev/NilDa/sources/core/neuralNetwork/neuralNetwork.cpp" line="416" col="44" info="Calling function 'getSumError', 3rd argument 'false' value is 0"/>
</function-call><function-call call-id="/home/dante/dev/NilDa/sources/core/neuralNetwork/neuralNetwork.h:109:8" call-funcname="forwardPropagation" call-argnr="2" file="/home/dante/dev/NilDa/sources/core/neuralNetwork/neuralNetwork.cpp" line="564" col="21" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="/home/dante/dev/NilDa/sources/core/neuralNetwork/neuralNetwork.h:79:8" call-funcname="initLayers" call-argnr="1" file="/home/dante/dev/NilDa/sources/core/neuralNetwork/neuralNetwork.cpp" line="631" col="13" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/>  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="initLayers" lineNumber="47"/>
    <functiondecl functionName="summary" lineNumber="84"/>
    <functiondecl functionName="configure" lineNumber="167"/>
    <functiondecl functionName="initOptimizer" lineNumber="187"/>
    <functiondecl functionName="setLossFunction" lineNumber="202"/>
    <functiondecl functionName="setLossFunction" lineNumber="207"/>
    <functiondecl functionName="forwardPropagation" lineNumber="229"/>
    <functiondecl functionName="backwardPropagation" lineNumber="259"/>
    <functiondecl functionName="getLoss" lineNumber="310"/>
    <functiondecl functionName="propagate" lineNumber="322"/>
    <functiondecl functionName="train" lineNumber="335"/>
    <functiondecl functionName="update" lineNumber="451"/>
    <functiondecl functionName="predict" lineNumber="477"/>
    <functiondecl functionName="getSumError" lineNumber="494"/>
    <functiondecl functionName="getAccuracy" lineNumber="509"/>
    <functiondecl functionName="getAccuracy" lineNumber="521"/>
    <functiondecl functionName="getProbability" lineNumber="559"/>
    <functiondecl functionName="saveModel" lineNumber="569"/>
    <functiondecl functionName="loadModel" lineNumber="599"/>
    <functiondecl functionName="checkWeightsGradients" lineNumber="644"/>
    <functiondecl functionName="checkBiasesGradients" lineNumber="716"/>
    <functiondecl functionName="gradientsSanityCheck" lineNumber="784"/>
    <functiondecl functionName="initLayers" lineNumber="47"/>
    <functiondecl functionName="summary" lineNumber="84"/>
    <functiondecl functionName="configure" lineNumber="167"/>
    <functiondecl functionName="initOptimizer" lineNumber="187"/>
    <functiondecl functionName="setLossFunction" lineNumber="202"/>
    <functiondecl functionName="setLossFunction" lineNumber="207"/>
    <functiondecl functionName="forwardPropagation" lineNumber="229"/>
    <functiondecl functionName="backwardPropagation" lineNumber="259"/>
    <functiondecl functionName="getLoss" lineNumber="310"/>
    <functiondecl functionName="propagate" lineNumber="322"/>
    <functiondecl functionName="train" lineNumber="335"/>
    <functiondecl functionName="update" lineNumber="451"/>
    <functiondecl functionName="predict" lineNumber="477"/>
    <functiondecl functionName="getSumError" lineNumber="494"/>
    <functiondecl functionName="getAccuracy" lineNumber="509"/>
    <functiondecl functionName="getAccuracy" lineNumber="521"/>
    <functiondecl functionName="getProbability" lineNumber="559"/>
    <functiondecl functionName="saveModel" lineNumber="569"/>
    <functiondecl functionName="loadModel" lineNumber="599"/>
    <functiondecl functionName="checkWeightsGradients" lineNumber="644"/>
    <functiondecl functionName="checkBiasesGradients" lineNumber="716"/>
    <functiondecl functionName="gradientsSanityCheck" lineNumber="784"/>
    <functioncall functionName="EXIT_FAIL"/>
    <functioncall functionName="EXIT_OK"/>
    <functioncall functionName="Jm"/>
    <functioncall functionName="abort"/>
    <functioncall functionName="abs"/>
    <functioncall functionName="all"/>
    <functioncall functionName="array"/>
    <functioncall functionName="assert"/>
    <functioncall functionName="backPropCache"/>
    <functioncall functionName="backwardPropagation"/>
    <functioncall functionName="batchNormalization"/>
    <functioncall functionName="batchSize"/>
    <functioncall functionName="batchStride"/>
    <functioncall functionName="biases"/>
    <functioncall functionName="biasesBk"/>
    <functioncall functionName="binary"/>
    <functioncall functionName="binaryCrossentropy"/>
    <functioncall functionName="break"/>
    <functioncall functionName="categoricalCrossentropy"/>
    <functioncall functionName="channels"/>
    <functioncall functionName="checkBiasesGradients"/>
    <functioncall functionName="checkInput"/>
    <functioncall functionName="checkInputSize"/>
    <functioncall functionName="checkWeightsGradients"/>
    <functioncall functionName="close"/>
    <functioncall functionName="cols"/>
    <functioncall functionName="colwise"/>
    <functioncall functionName="compute"/>
    <functioncall functionName="computeDerivative"/>
    <functioncall functionName="const"/>
    <functioncall functionName="conv2D"/>
    <functioncall functionName="count"/>
    <functioncall functionName="createLayer"/>
    <functioncall functionName="dBiasesNum"/>
    <functioncall functionName="dLoss"/>
    <functioncall functionName="dWeightsNum"/>
    <functioncall functionName="data"/>
    <functioncall functionName="default"/>
    <functioncall functionName="deltaBiases"/>
    <functioncall functionName="deltaWeights"/>
    <functioncall functionName="dense"/>
    <functioncall functionName="dropout"/>
    <functioncall functionName="duration_cast"/>
    <functioncall functionName="epochSteps"/>
    <functioncall functionName="epochs"/>
    <functioncall functionName="eps"/>
    <functioncall functionName="error"/>
    <functioncall functionName="errorLimit"/>
    <functioncall functionName="fail"/>
    <functioncall functionName="false"/>
    <functioncall functionName="finalizedNetwork_"/>
    <functioncall functionName="firstLayer_"/>
    <functioncall functionName="float"/>
    <functioncall functionName="floor"/>
    <functioncall functionName="for"/>
    <functioncall functionName="forwardPropagation"/>
    <functioncall functionName="getBiases"/>
    <functioncall functionName="getBiasesDerivative"/>
    <functioncall functionName="getLayerName"/>
    <functioncall functionName="getLoss"/>
    <functioncall functionName="getSumError"/>
    <functioncall functionName="getWeights"/>
    <functioncall functionName="getWeightsDerivative"/>
    <functioncall functionName="i"/>
    <functioncall functionName="identity"/>
    <functioncall functionName="if"/>
    <functioncall functionName="ifs"/>
    <functioncall functionName="incrementWeightsAndBiases"/>
    <functioncall functionName="init"/>
    <functioncall functionName="initLayers"/>
    <functioncall functionName="initOptimizer"/>
    <functioncall functionName="input"/>
    <functioncall functionName="inputFile"/>
    <functioncall functionName="inputLayer_"/>
    <functioncall functionName="inputStride"/>
    <functioncall functionName="int"/>
    <functioncall functionName="isFlat"/>
    <functioncall functionName="isTrainable"/>
    <functioncall functionName="j"/>
    <functioncall functionName="lCode"/>
    <functioncall functionName="lType"/>
    <functioncall functionName="labels"/>
    <functioncall functionName="labelsBatched"/>
    <functioncall functionName="lastLayer_"/>
    <functioncall functionName="layer"/>
    <functioncall functionName="layerType"/>
    <functioncall functionName="layers_"/>
    <functioncall functionName="loadLayer"/>
    <functioncall functionName="loss"/>
    <functioncall functionName="lossCode"/>
    <functioncall functionName="lossFunctionCode"/>
    <functioncall functionName="lossFunctionName"/>
    <functioncall functionName="lossFunction_"/>
    <functioncall functionName="lossName"/>
    <functioncall functionName="make_unique"/>
    <functioncall functionName="maxPool2D"/>
    <functioncall functionName="message"/>
    <functioncall functionName="name"/>
    <functioncall functionName="neuralNetwork"/>
    <functioncall functionName="noalias"/>
    <functioncall functionName="none"/>
    <functioncall functionName="norm"/>
    <functioncall functionName="now"/>
    <functioncall functionName="nullptr"/>
    <functioncall functionName="numberOfLayers_"/>
    <functioncall functionName="numberOfParameters"/>
    <functioncall functionName="obs"/>
    <functioncall functionName="obsBatched"/>
    <functioncall functionName="ofs"/>
    <functioncall functionName="opt"/>
    <functioncall functionName="output"/>
    <functioncall functionName="outputFile"/>
    <functioncall functionName="override"/>
    <functioncall functionName="predict"/>
    <functioncall functionName="predictions"/>
    <functioncall functionName="progess"/>
    <functioncall functionName="propagate"/>
    <functioncall functionName="push_back"/>
    <functioncall functionName="read"/>
    <functioncall functionName="relu"/>
    <functioncall functionName="resetWeightBiases"/>
    <functioncall functionName="return"/>
    <functioncall functionName="rows"/>
    <functioncall functionName="runForward"/>
    <functioncall functionName="sanityCheck"/>
    <functioncall functionName="saveLayer"/>
    <functioncall functionName="seqN"/>
    <functioncall functionName="setLossFunction"/>
    <functioncall functionName="setWeightsAndBiases"/>
    <functioncall functionName="setfill"/>
    <functioncall functionName="setupBackward"/>
    <functioncall functionName="setw"/>
    <functioncall functionName="sigmoid"/>
    <functioncall functionName="size"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="softmax"/>
    <functioncall functionName="sparseCategoricalCrossentropy"/>
    <functioncall functionName="startTime"/>
    <functioncall functionName="static_cast"/>
    <functioncall functionName="sum"/>
    <functioncall functionName="switch"/>
    <functioncall functionName="tanh"/>
    <functioncall functionName="to_string"/>
    <functioncall functionName="totN"/>
    <functioncall functionName="trainingPhase"/>
    <functioncall functionName="true"/>
    <functioncall functionName="trueData"/>
    <functioncall functionName="trunc"/>
    <functioncall functionName="type"/>
    <functioncall functionName="type_"/>
    <functioncall functionName="update"/>
    <functioncall functionName="vLayers"/>
    <functioncall functionName="validState_"/>
    <functioncall functionName="verbosity"/>
    <functioncall functionName="weights"/>
    <functioncall functionName="weightsBk"/>
    <functioncall functionName="write"/>
  </FileInfo>
</analyzerinfo>
